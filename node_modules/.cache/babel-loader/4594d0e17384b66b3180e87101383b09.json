{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"questions-ctr\"\n};\nconst _hoisted_2 = {\n  class: \"progress\"\n};\nconst _hoisted_3 = {\n  class: \"status\"\n};\nconst _hoisted_4 = {\n  class: \"question\"\n};\nconst _hoisted_5 = {\n  class: \"answers\"\n};\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"bar\",\n    style: _normalizeStyle({\n      width: `${$props.questionsAnswered}`\n    })\n  }, null, 4\n  /* STYLE */\n  ), _createElementVNode(\"div\", _hoisted_3, _toDisplayString($props.questionsAnswered) + \" out of \" + _toDisplayString($props.questions.length) + \" questions answered \", 1\n  /* TEXT */\n  )]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.questions, (question, qi) => {\n    return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n      class: \"single-question\",\n      key: question.q\n    }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(question.q), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.answers, answer => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"answer\",\n        key: answer.length,\n        onClick: _withModifiers($event => $options.selectAnswer(answer.is_correct), [\"prevent\"])\n      }, _toDisplayString(answer.text), 9\n      /* TEXT, PROPS */\n      , _hoisted_6);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])])), [[_vShow, $props.questionsAnswered === qi]]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AAEJA,OAAK,EAAC;;;AAUNA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;;uBAdfC,oBAyBM,KAzBN,cAyBM,CAxBJC,oBAKM,KALN,cAKM,CAJJA,oBAA+D,KAA/D,EAA+D;AAA1DF,SAAK,EAAC,KAAoD;AAA7CG,SAAK;AAAAC,gBAAYC,wBAAiB;AAA7B;AAAwC,GAA/D;;AAAA,GAII,EAHJH,oBAEM,KAFN,cAEMI,iBADDD,wBACC,IADmB,UACnB,GAD2BC,iBAAGD,iBAAUE,MAAb,CAC3B,GADiD,sBADvD,EAEA;AAAA;AAFA,GAGI,CALN,CAwBI,qBAlBJN,oBAiBMO,SAjBN,EAiBM,IAjBN,EAiBMC,YAfqBJ,gBAerB,EAf8B,CAA1BK,QAA0B,EAAhBC,EAAgB,KAAd;0CAFtBV,oBAiBM,KAjBN,EAiBM;AAhBJD,WAAK,EAAC,iBAgBF;AAdHY,SAAG,EAAEF,QAAQ,CAACG;AAcX,KAjBN,GAMEX,oBAA4C,KAA5C,cAA4CI,iBAAnBI,QAAQ,CAACG,CAAU,CAA5C,EAAmC;AAAA;AAAnC,OACAX,oBASM,KATN,cASM,oBARJD,oBAOMO,SAPN,EAOM,IAPN,EAOMC,YALaC,QAAQ,CAACI,OAKtB,EALGC,MAA0B,IAApB;2BAFfd,oBAOM,KAPN,EAOM;AANJD,aAAK,EAAC,QAMF;AAJHY,WAAG,EAAEG,MAAM,CAACR,MAIT;AAHHS,eAAK,2BAAUC,sBAAaF,MAAM,CAACG,UAApB,CAAV,EAAwC,WAAxC;AAGF,OAPN,mBAMKH,MAAM,CAACI,KANZ,EAMgB;AAAA;AANhB,QAMgBC,UANhB;KAOM,CAPN;;AAAA,KAQI,EATN,EAPF,cAIUf,6BAAsBM;GAa1B,CAjBN;;AAAA,GAkBI,EAzBN","names":["class","_createElementBlock","_createElementVNode","style","width","$props","_toDisplayString","length","_Fragment","_renderList","question","qi","key","q","answers","answer","onClick","$options","is_correct","text","_hoisted_6"],"sourceRoot":"","sources":["D:\\Front-End\\Vue js\\quiz\\quiz\\src\\components\\Questions.vue"],"sourcesContent":["<template lang=\"\">\r\n  <div class=\"questions-ctr\">\r\n    <div class=\"progress\">\r\n      <div class=\"bar\" :style=\"{width:`${questionsAnswered}`}\"></div>\r\n      <div class=\"status\">\r\n        {{ questionsAnswered }} out of {{ questions.length }} questions answered\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"single-question\"\r\n      v-for=\"(question, qi) in questions\"\r\n      :key=\"question.q\"\r\n      v-show=\"questionsAnswered === qi\"\r\n    >\r\n      <div class=\"question\">{{ question.q }}</div>\r\n      <div class=\"answers\">\r\n        <div\r\n          class=\"answer\"\r\n          v-for=\"answer in question.answers\"\r\n          :key=\"answer.length\"\r\n          @click.prevent=\"selectAnswer(answer.is_correct)\"\r\n        >\r\n          {{ answer.text }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"my-qustions\",\r\n  props: [\"questions\", \"questionsAnswered\"],\r\n  emits: [\"question-answered\"],\r\n  methods: {\r\n    selectAnswer(is_correct) {\r\n      this.$emit(\"question-answered\", is_correct);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}