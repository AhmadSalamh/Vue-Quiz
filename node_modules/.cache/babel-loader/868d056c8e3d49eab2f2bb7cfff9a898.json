{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"questions-ctr\"\n};\nconst _hoisted_2 = {\n  class: \"progress\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"bar\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"status\"\n};\nconst _hoisted_5 = {\n  class: \"question\"\n};\nconst _hoisted_6 = {\n  class: \"answers\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, _toDisplayString() + \" out of 3 questions answered\", 1\n  /* TEXT */\n  )]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.questions, (question, qi) => {\n    return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n      class: \"single-question\",\n      key: question.q\n    }, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(question.q), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.answers, answer => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"answer\",\n        key: answer.length,\n        onClick: _withModifiers($event => $options.selectAnswer(answer.is_correct), [\"prevent\"])\n      }, _toDisplayString(answer.text), 9\n      /* TEXT, PROPS */\n      , _hoisted_7);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])])), [[_vShow, $props.questionsAnswered === qi]]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;gCACTC,oBAAuB,KAAvB,EAAuB;AAAlBD,OAAK,EAAC;AAAY,CAAvB,EAAgB,IAAhB,EAAgB;AAAA;AAAhB;;;AACKA,OAAK,EAAC;;;AAQNA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;;uBAZfE,oBAuBM,KAvBN,cAuBM,CAtBJD,oBAGM,KAHN,cAGM,CAFJE,UAEI,EADJF,oBAA0D,KAA1D,cAA0DG,qBAAlC,8BAAxB,EAAoD;AAAA;AAApD,GACI,CAHN,CAsBI,qBAlBJF,oBAiBMG,SAjBN,EAiBM,IAjBN,EAiBMC,YAfqBC,gBAerB,EAf8B,CAA1BC,QAA0B,EAAhBC,EAAgB,KAAd;0CAFtBP,oBAiBM,KAjBN,EAiBM;AAhBJF,WAAK,EAAC,iBAgBF;AAdHU,SAAG,EAAEF,QAAQ,CAACG;AAcX,KAjBN,GAMEV,oBAA4C,KAA5C,cAA4CG,iBAAnBI,QAAQ,CAACG,CAAU,CAA5C,EAAmC;AAAA;AAAnC,OACAV,oBASM,KATN,cASM,oBARJC,oBAOMG,SAPN,EAOM,IAPN,EAOMC,YALaE,QAAQ,CAACI,OAKtB,EALGC,MAA0B,IAApB;2BAFfX,oBAOM,KAPN,EAOM;AANJF,aAAK,EAAC,QAMF;AAJHU,WAAG,EAAEG,MAAM,CAACC,MAIT;AAHHC,eAAK,2BAAUC,sBAAaH,MAAM,CAACI,UAApB,CAAV,EAAwC,WAAxC;AAGF,OAPN,mBAMKJ,MAAM,CAACK,KANZ,EAMgB;AAAA;AANhB,QAMgBC,UANhB;KAOM,CAPN;;AAAA,KAQI,EATN,EAPF,cAIUZ,6BAAsBE;GAa1B,CAjBN;;AAAA,GAkBI,EAvBN","names":["class","_createElementVNode","_createElementBlock","_hoisted_3","_toDisplayString","_Fragment","_renderList","$props","question","qi","key","q","answers","answer","length","onClick","$options","is_correct","text","_hoisted_7"],"sourceRoot":"","sources":["D:\\Front-End\\Vue js\\quiz\\quiz\\src\\components\\Questions.vue"],"sourcesContent":["<template lang=\"\">\r\n  <div class=\"questions-ctr\">\r\n    <div class=\"progress\">\r\n      <div class=\"bar\"></div>\r\n      <div class=\"status\">{{}} out of 3 questions answered</div>\r\n    </div>\r\n    <div\r\n      class=\"single-question\"\r\n      v-for=\"(question, qi) in questions\"\r\n      :key=\"question.q\"\r\n      v-show=\"questionsAnswered === qi\"\r\n    >\r\n      <div class=\"question\">{{ question.q }}</div>\r\n      <div class=\"answers\">\r\n        <div\r\n          class=\"answer\"\r\n          v-for=\"answer in question.answers\"\r\n          :key=\"answer.length\"\r\n          @click.prevent=\"selectAnswer(answer.is_correct)\"\r\n        >\r\n          {{ answer.text }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"my-qustions\",\r\n  props: [\"questions\", \"questionsAnswered\"],\r\n  emits: [\"question-answered\"],\r\n  methods: {\r\n    selectAnswer(is_correct) {\r\n      this.$emit(\"question-answered\", is_correct);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}